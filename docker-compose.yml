version: "3.5"

services:
  nginx:
    container_name: poker_nginx
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      args:
        ENVIRONMENT: "prod"
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - api
      - web
  mysql:
    container_name: poker_mysql
    image: mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
    networks:
      - api
  api:
    container_name: poker_api
    build:
      context: .
      dockerfile: docker/api/prod/Dockerfile
      args:
        API_PATH: ${API_PATH}
    environment:
      APP_DEBUG: "false"
      APP_ENV: "production"
      DB_CONNECTION: ${API_DB_CONNECTION}
      DB_HOST: ${API_DB_HOST}
      DB_PORT: ${API_DB_PORT}
      DB_DATABASE: ${API_DB_DATABASE}
      DB_USERNAME: ${API_DB_USERNAME}
      DB_PASSWORD: ${API_DB_PASSWORD}
      APP_NAME: ${API_NAME}
      APP_KEY: ${API_KEY}
      APP_URL: ${API_URL}
    networks:
      - api
  mongo:
    container_name: poker_mongo
    image: mongo
    networks:
      - api
  rabbitMQ:
    container_name: poker_rabbitMQ
    image: rabbitmq
    networks:
      - api
  web:
    container_name: poker_web
    build:
      context: .
      dockerfile: docker/web/prod/Dockerfile
    ports:
      - "3000:3000"
    environment:
      WEB_PATH: ${WEB_PATH}
    networks:
      - web

networks:
  api:
    name: ${API_NETWORK}
    driver: bridge
  web:
    name: ${WEB_NETWORK}
    driver: bridge
